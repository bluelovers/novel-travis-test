"use strict";
/**
 * Created by user on 2018/12/17/017.
 */
Object.defineProperty(exports, "__esModule", { value: true });
const project_config_1 = require("../../project.config");
const path = require("upath2");
const fs = require("fs-extra");
const moment = require("moment");
const array_hyper_unique_1 = require("array-hyper-unique");
const sort_1 = require("@node-novel/sort");
const sortObject = require("sort-object-keys2");
let opened;
const todayMoment = moment().startOf('day');
class NovelStatCache {
    /**
     * @deprecated
     */
    constructor(options) {
        this.file = path.join(project_config_1.default.cache_root, 'novel-stat.json');
        this.data = null;
        this.inited = false;
        this.options = options || {};
        this.open();
    }
    open() {
        if (!this.inited) {
            this.inited = true;
            if (fs.pathExistsSync(this.file)) {
                this.data = fs.readJSONSync(this.file);
            }
            else {
                // @ts-ignore
                this.data = {};
            }
            this.data.novels = this.data.novels || {};
            this.data.history = this.data.history || {};
        }
        return this;
    }
    pathMain(pathMain) {
        return this.data.novels[pathMain] = this.data.novels[pathMain] || {};
    }
    novel(pathMain, novelID) {
        this.pathMain(pathMain);
        this.data.novels[pathMain][novelID] = this.data.novels[pathMain][novelID] || {};
        return this.data.novels[pathMain][novelID];
    }
    /**
     * @deprecated
     */
    _beforeSave() {
        let timestamp = this.timestamp;
        let ks = Object.keys(this.data.history);
        if (ks.length > 7) {
            ks.sort().slice(0, -7).forEach(k => delete this.data.history[k]);
        }
        if (timestamp in this.data.history) {
            let today = this.data.history[timestamp];
            if (today.epub) {
                array_hyper_unique_1.array_unique(today.epub, {
                    overwrite: true,
                });
                today.epub.sort(function (a, b) {
                    return sort_1.defaultSortCallback(a[0], b[0])
                        || sort_1.defaultSortCallback(a[1], b[1]);
                });
                today.epub_count = today.epub.length | 0;
            }
        }
        sortObject(this.data, {
            useSource: true,
            keys: [
                'history',
                'novels',
            ],
        });
        return this;
    }
    save() {
        fs.outputJSONSync(this.file, this.toJSON(true));
        return this;
    }
    get timestamp() {
        return todayMoment.unix();
    }
    historyPrev() {
        let timestamp = this.timestamp;
        let ks;
        if (timestamp in this.data.history) {
            ks = Object.keys(this.data.history);
            ks.pop();
        }
        else {
            ks = Object.keys(this.data.history);
        }
        let k = ks.pop();
        if (k in this.data.history) {
            return this.data.history[k];
        }
        return null;
    }
    historyToday() {
        let timestamp = this.timestamp;
        let data = this.data.history[timestamp] = this.data.history[timestamp] || {};
        data.epub_count = data.epub_count | 0;
        data.epub = data.epub || [];
        return this.data.history[timestamp];
    }
    static create(options) {
        if (opened) {
            return opened;
        }
        return opened = new this(options);
    }
    toJSON(bool) {
        if (bool) {
            this._beforeSave();
        }
        return this.data;
    }
}
exports.NovelStatCache = NovelStatCache;
function getNovelStatCache() {
    return NovelStatCache.create();
}
exports.getNovelStatCache = getNovelStatCache;
/*
let c = NovelStatCache.create();

let t = c.historyToday();

t.epub.push(['k', 'b']);
t.epub.push(['a', 'b']);

c._beforeSave();

console.dir(c, {
    depth: null,
});
*/
//# sourceMappingURL=data:application/json;base64,