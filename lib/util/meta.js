"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const fs = require("fs-extra");
const node_novel_info_1 = require("node-novel-info");
const log_1 = require("../log");
const path = require("path");
const project_config_1 = require("../../project.config");
const metaMap = new Map();
function getMdconfMeta(pathMain, novelID, reload) {
    let basePath = path.join(project_config_1.default.novel_root, pathMain, novelID);
    return getMdconfMetaByPath(basePath, reload);
}
exports.getMdconfMeta = getMdconfMeta;
function getMdconfMetaByPath(basePath, reload) {
    if (!reload && metaMap.has(basePath)) {
        return metaMap.get(basePath);
    }
    let meta;
    try {
        let data = fs.readFileSync(path.join(basePath, 'README.md'));
        meta = node_novel_info_1.mdconf_parse(data, {
            throw: false,
        });
        meta = node_novel_info_1.chkInfo(meta);
    }
    catch (e) {
        log_1.default.error(e);
        meta = null;
    }
    metaMap.set(basePath, meta);
    return meta;
}
exports.getMdconfMetaByPath = getMdconfMetaByPath;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoibWV0YS5qcyIsInNvdXJjZVJvb3QiOiIiLCJzb3VyY2VzIjpbIm1ldGEudHMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7QUFBQSwrQkFBK0I7QUFDL0IscURBQXFFO0FBQ3JFLGdDQUE2QjtBQUM3Qiw2QkFBOEI7QUFDOUIseURBQWlEO0FBRWpELE1BQU0sT0FBTyxHQUFHLElBQUksR0FBRyxFQUF1QixDQUFDO0FBRS9DLFNBQWdCLGFBQWEsQ0FBQyxRQUFnQixFQUFFLE9BQWUsRUFBRSxNQUFnQjtJQUVoRixJQUFJLFFBQVEsR0FBRyxJQUFJLENBQUMsSUFBSSxDQUFDLHdCQUFhLENBQUMsVUFBVSxFQUFFLFFBQVEsRUFBRSxPQUFPLENBQUMsQ0FBQztJQUV0RSxPQUFPLG1CQUFtQixDQUFDLFFBQVEsRUFBRSxNQUFNLENBQUMsQ0FBQztBQUM5QyxDQUFDO0FBTEQsc0NBS0M7QUFFRCxTQUFnQixtQkFBbUIsQ0FBQyxRQUFnQixFQUFFLE1BQWdCO0lBR3JFLElBQUksQ0FBQyxNQUFNLElBQUksT0FBTyxDQUFDLEdBQUcsQ0FBQyxRQUFRLENBQUMsRUFDcEM7UUFDQyxPQUFPLE9BQU8sQ0FBQyxHQUFHLENBQUMsUUFBUSxDQUFDLENBQUE7S0FDNUI7SUFFRCxJQUFJLElBQWlCLENBQUM7SUFFdEIsSUFDQTtRQUNDLElBQUksSUFBSSxHQUFHLEVBQUUsQ0FBQyxZQUFZLENBQUMsSUFBSSxDQUFDLElBQUksQ0FBQyxRQUFRLEVBQUUsV0FBVyxDQUFDLENBQUMsQ0FBQztRQUU3RCxJQUFJLEdBQUcsOEJBQVksQ0FBQyxJQUFJLEVBQUU7WUFDekIsS0FBSyxFQUFFLEtBQUs7U0FDWixDQUFDLENBQUM7UUFFSCxJQUFJLEdBQUcseUJBQU8sQ0FBQyxJQUFJLENBQUMsQ0FBQztLQUNyQjtJQUNELE9BQU8sQ0FBQyxFQUNSO1FBQ0MsYUFBTyxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsQ0FBQztRQUNqQixJQUFJLEdBQUcsSUFBSSxDQUFDO0tBQ1o7SUFFRCxPQUFPLENBQUMsR0FBRyxDQUFDLFFBQVEsRUFBRSxJQUFJLENBQUMsQ0FBQztJQUU1QixPQUFPLElBQUksQ0FBQztBQUNiLENBQUM7QUE3QkQsa0RBNkJDIiwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0ICogYXMgZnMgZnJvbSAnZnMtZXh0cmEnO1xuaW1wb3J0IHsgY2hrSW5mbywgSU1kY29uZk1ldGEsIG1kY29uZl9wYXJzZSB9IGZyb20gJ25vZGUtbm92ZWwtaW5mbyc7XG5pbXBvcnQgY29uc29sZSBmcm9tICcuLi9sb2cnO1xuaW1wb3J0IHBhdGggPSByZXF1aXJlKCdwYXRoJyk7XG5pbXBvcnQgUHJvamVjdENvbmZpZyBmcm9tICcuLi8uLi9wcm9qZWN0LmNvbmZpZyc7XG5cbmNvbnN0IG1ldGFNYXAgPSBuZXcgTWFwPHN0cmluZywgSU1kY29uZk1ldGE+KCk7XG5cbmV4cG9ydCBmdW5jdGlvbiBnZXRNZGNvbmZNZXRhKHBhdGhNYWluOiBzdHJpbmcsIG5vdmVsSUQ6IHN0cmluZywgcmVsb2FkPzogYm9vbGVhbilcbntcblx0bGV0IGJhc2VQYXRoID0gcGF0aC5qb2luKFByb2plY3RDb25maWcubm92ZWxfcm9vdCwgcGF0aE1haW4sIG5vdmVsSUQpO1xuXG5cdHJldHVybiBnZXRNZGNvbmZNZXRhQnlQYXRoKGJhc2VQYXRoLCByZWxvYWQpO1xufVxuXG5leHBvcnQgZnVuY3Rpb24gZ2V0TWRjb25mTWV0YUJ5UGF0aChiYXNlUGF0aDogc3RyaW5nLCByZWxvYWQ/OiBib29sZWFuKVxue1xuXG5cdGlmICghcmVsb2FkICYmIG1ldGFNYXAuaGFzKGJhc2VQYXRoKSlcblx0e1xuXHRcdHJldHVybiBtZXRhTWFwLmdldChiYXNlUGF0aClcblx0fVxuXG5cdGxldCBtZXRhOiBJTWRjb25mTWV0YTtcblxuXHR0cnlcblx0e1xuXHRcdGxldCBkYXRhID0gZnMucmVhZEZpbGVTeW5jKHBhdGguam9pbihiYXNlUGF0aCwgJ1JFQURNRS5tZCcpKTtcblxuXHRcdG1ldGEgPSBtZGNvbmZfcGFyc2UoZGF0YSwge1xuXHRcdFx0dGhyb3c6IGZhbHNlLFxuXHRcdH0pO1xuXG5cdFx0bWV0YSA9IGNoa0luZm8obWV0YSk7XG5cdH1cblx0Y2F0Y2ggKGUpXG5cdHtcblx0XHRjb25zb2xlLmVycm9yKGUpO1xuXHRcdG1ldGEgPSBudWxsO1xuXHR9XG5cblx0bWV0YU1hcC5zZXQoYmFzZVBhdGgsIG1ldGEpO1xuXG5cdHJldHVybiBtZXRhO1xufVxuIl19