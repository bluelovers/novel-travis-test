"use strict";
/**
 * Created by user on 2018/5/28/028.
 */
Object.defineProperty(exports, "__esModule", { value: true });
exports.createPullRequestsGitee = void 0;
const gitee_api_token_1 = require("gitee-api-token");
const client_oauth2_request_1 = require("client-oauth2-request");
const git_1 = require("../git");
const project_config_1 = require("../../project.config");
const dotenv_1 = require("dotenv");
const path = require("upath2");
const log_1 = require("../../lib/log");
async function createPullRequestsGitee() {
    log_1.default.info(`嘗試建立 PR`);
    let GITEE_ACCESS_TOKEN = process.env.GITEE_ACCESS_TOKEN || '';
    let GITEE_CLIENT_ID = process.env.GITEE_CLIENT_ID || '';
    let GITEE_CLIENT_SECRET = process.env.GITEE_CLIENT_SECRET || '';
    let GITEE_TOKEN1 = process.env.GITEE_TOKEN1 || '';
    let GITEE_TOKEN2 = process.env.GITEE_TOKEN2 || '';
    if (!GITEE_ACCESS_TOKEN || !GITEE_CLIENT_ID || !GITEE_CLIENT_SECRET) {
        let env = dotenv_1.config({ path: path.join(project_config_1.default.project_root, '.env') });
        if (env.parsed) {
            GITEE_ACCESS_TOKEN = GITEE_ACCESS_TOKEN || env.parsed.GITEE_ACCESS_TOKEN;
            GITEE_CLIENT_ID = GITEE_CLIENT_ID || env.parsed.GITEE_CLIENT_ID;
            GITEE_CLIENT_SECRET = GITEE_CLIENT_SECRET || env.parsed.GITEE_CLIENT_SECRET;
            GITEE_TOKEN1 = GITEE_TOKEN1 || env.parsed.GITEE_TOKEN1;
            GITEE_TOKEN2 = GITEE_TOKEN2 || env.parsed.GITEE_TOKEN2;
        }
    }
    let token = await gitee_api_token_1.default({
        //access_token: GITEE_ACCESS_TOKEN,
        username: GITEE_TOKEN1,
        password: GITEE_TOKEN2,
        clientId: GITEE_CLIENT_ID,
        clientSecret: GITEE_CLIENT_SECRET,
        scopes: 'pull_requests',
    }).catch(function (err) {
        log_1.default.error(err);
    });
    if (!token) {
        log_1.default.error(`無法取得 token`);
        return;
    }
    else {
        log_1.default.info(`已取得 token`);
    }
    let rq = new client_oauth2_request_1.default(token, {
        apiRoot: 'https://gitee.com/api/'
    });
    let br_name = git_1.currentBranchName(project_config_1.novel_root);
    if (!br_name.match(/^auto\//)) {
        log_1.default.error(`目前分支為 ${br_name} 忽略建立 PR`);
        return;
    }
    else {
        log_1.default.info(`目前分支為 ${br_name}`);
    }
    await rq
        .fetchSign('/v5/repos/bluelovers/novel/pulls', {
        method: 'POST',
        body: {
            title: br_name,
            head: `demogitee:${br_name}`,
            base: 'master',
            body: 'auto pr',
        },
    })
        .tap(function (ret) {
        log_1.default.success(`成功建立 PR #${ret.number} ${ret.title}`);
        //console.dir(ret);
    })
        .catch(function (err) {
        log_1.default.error(err.toString());
        log_1.default.error(err.code, err.status, err.body);
    });
}
exports.createPullRequestsGitee = createPullRequestsGitee;
exports.default = createPullRequestsGitee;
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiZ2l0ZWUtcHIuanMiLCJzb3VyY2VSb290IjoiIiwic291cmNlcyI6WyJnaXRlZS1wci50cyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiO0FBQUE7O0dBRUc7OztBQUVILHFEQUF1QztBQUN2QyxpRUFBa0Q7QUFDbEQsZ0NBQTJDO0FBQzNDLHlEQUFpRTtBQUNqRSxtQ0FBZ0Q7QUFDaEQsK0JBQWdDO0FBQ2hDLHVDQUFvQztBQUU3QixLQUFLLFVBQVUsdUJBQXVCO0lBRTVDLGFBQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxDQUFDLENBQUM7SUFFeEIsSUFBSSxrQkFBa0IsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGtCQUFrQixJQUFJLEVBQUUsQ0FBQztJQUM5RCxJQUFJLGVBQWUsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLGVBQWUsSUFBSSxFQUFFLENBQUM7SUFDeEQsSUFBSSxtQkFBbUIsR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLG1CQUFtQixJQUFJLEVBQUUsQ0FBQztJQUNoRSxJQUFJLFlBQVksR0FBRyxPQUFPLENBQUMsR0FBRyxDQUFDLFlBQVksSUFBSSxFQUFFLENBQUM7SUFDbEQsSUFBSSxZQUFZLEdBQUcsT0FBTyxDQUFDLEdBQUcsQ0FBQyxZQUFZLElBQUksRUFBRSxDQUFDO0lBRWxELElBQUksQ0FBQyxrQkFBa0IsSUFBSSxDQUFDLGVBQWUsSUFBSSxDQUFDLG1CQUFtQixFQUNuRTtRQUNDLElBQUksR0FBRyxHQUFHLGVBQVksQ0FBQyxFQUFFLElBQUksRUFBRSxJQUFJLENBQUMsSUFBSSxDQUFDLHdCQUFhLENBQUMsWUFBWSxFQUFFLE1BQU0sQ0FBQyxFQUFFLENBQUMsQ0FBQztRQUVoRixJQUFJLEdBQUcsQ0FBQyxNQUFNLEVBQ2Q7WUFDQyxrQkFBa0IsR0FBRyxrQkFBa0IsSUFBSSxHQUFHLENBQUMsTUFBTSxDQUFDLGtCQUFrQixDQUFDO1lBQ3pFLGVBQWUsR0FBRyxlQUFlLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxlQUFlLENBQUM7WUFDaEUsbUJBQW1CLEdBQUcsbUJBQW1CLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxtQkFBbUIsQ0FBQztZQUU1RSxZQUFZLEdBQUcsWUFBWSxJQUFJLEdBQUcsQ0FBQyxNQUFNLENBQUMsWUFBWSxDQUFDO1lBQ3ZELFlBQVksR0FBRyxZQUFZLElBQUksR0FBRyxDQUFDLE1BQU0sQ0FBQyxZQUFZLENBQUM7U0FDdkQ7S0FDRDtJQUVELElBQUksS0FBSyxHQUFHLE1BQU0seUJBQVEsQ0FBQztRQUUxQixtQ0FBbUM7UUFFbkMsUUFBUSxFQUFFLFlBQVk7UUFDdEIsUUFBUSxFQUFFLFlBQVk7UUFFdEIsUUFBUSxFQUFFLGVBQWU7UUFDekIsWUFBWSxFQUFFLG1CQUFtQjtRQUVqQyxNQUFNLEVBQUUsZUFBZTtLQUV2QixDQUFDLENBQUMsS0FBSyxDQUFDLFVBQVUsR0FBRztRQUVyQixhQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxDQUFDO0lBQ3BCLENBQUMsQ0FBQyxDQUFDO0lBRUgsSUFBSSxDQUFDLEtBQUssRUFDVjtRQUNDLGFBQU8sQ0FBQyxLQUFLLENBQUMsWUFBWSxDQUFDLENBQUM7UUFFNUIsT0FBTztLQUNQO1NBRUQ7UUFDQyxhQUFPLENBQUMsSUFBSSxDQUFDLFdBQVcsQ0FBQyxDQUFDO0tBQzFCO0lBRUQsSUFBSSxFQUFFLEdBQUcsSUFBSSwrQkFBYSxDQUFDLEtBQUssRUFBRTtRQUNqQyxPQUFPLEVBQUUsd0JBQXdCO0tBQ2pDLENBQUMsQ0FBQztJQUVILElBQUksT0FBTyxHQUFHLHVCQUFpQixDQUFDLDJCQUFVLENBQUMsQ0FBQztJQUU1QyxJQUFJLENBQUMsT0FBTyxDQUFDLEtBQUssQ0FBQyxTQUFTLENBQUMsRUFDN0I7UUFDQyxhQUFPLENBQUMsS0FBSyxDQUFDLFNBQVMsT0FBTyxVQUFVLENBQUMsQ0FBQztRQUUxQyxPQUFPO0tBQ1A7U0FFRDtRQUNDLGFBQU8sQ0FBQyxJQUFJLENBQUMsU0FBUyxPQUFPLEVBQUUsQ0FBQyxDQUFDO0tBQ2pDO0lBRUQsTUFBTSxFQUFFO1NBQ04sU0FBUyxDQUFDLGtDQUFrQyxFQUFFO1FBQzlDLE1BQU0sRUFBRSxNQUFNO1FBQ2QsSUFBSSxFQUFFO1lBQ0wsS0FBSyxFQUFFLE9BQU87WUFDZCxJQUFJLEVBQUUsYUFBYSxPQUFPLEVBQUU7WUFDNUIsSUFBSSxFQUFFLFFBQVE7WUFDZCxJQUFJLEVBQUUsU0FBUztTQUNmO0tBQ0QsQ0FBQztTQUNELEdBQUcsQ0FBQyxVQUFVLEdBR2Q7UUFFQSxhQUFPLENBQUMsT0FBTyxDQUFDLFlBQVksR0FBRyxDQUFDLE1BQU0sSUFBSSxHQUFHLENBQUMsS0FBSyxFQUFFLENBQUMsQ0FBQztRQUN2RCxtQkFBbUI7SUFDcEIsQ0FBQyxDQUFDO1NBQ0QsS0FBSyxDQUFDLFVBQVUsR0FBRztRQUVuQixhQUFPLENBQUMsS0FBSyxDQUFDLEdBQUcsQ0FBQyxRQUFRLEVBQUUsQ0FBQyxDQUFDO1FBQzlCLGFBQU8sQ0FBQyxLQUFLLENBQUMsR0FBRyxDQUFDLElBQUksRUFBRSxHQUFHLENBQUMsTUFBTSxFQUFFLEdBQUcsQ0FBQyxJQUFJLENBQUMsQ0FBQztJQUMvQyxDQUFDLENBQUMsQ0FDRjtBQUNGLENBQUM7QUE5RkQsMERBOEZDO0FBRUQsa0JBQWUsdUJBQXVCLENBQUMiLCJzb3VyY2VzQ29udGVudCI6WyIvKipcbiAqIENyZWF0ZWQgYnkgdXNlciBvbiAyMDE4LzUvMjgvMDI4LlxuICovXG5cbmltcG9ydCBnZXRUb2tlbiBmcm9tICdnaXRlZS1hcGktdG9rZW4nO1xuaW1wb3J0IENsaWVudFJlcXVlc3QgZnJvbSAnY2xpZW50LW9hdXRoMi1yZXF1ZXN0JztcbmltcG9ydCB7IGN1cnJlbnRCcmFuY2hOYW1lIH0gZnJvbSAnLi4vZ2l0JztcbmltcG9ydCBQcm9qZWN0Q29uZmlnLCB7IG5vdmVsX3Jvb3QgfSBmcm9tICcuLi8uLi9wcm9qZWN0LmNvbmZpZyc7XG5pbXBvcnQgeyBjb25maWcgYXMgZG90ZW52Q29uZmlnIH0gZnJvbSAnZG90ZW52JztcbmltcG9ydCBwYXRoID0gcmVxdWlyZSgndXBhdGgyJyk7XG5pbXBvcnQgY29uc29sZSBmcm9tICcuLi8uLi9saWIvbG9nJztcblxuZXhwb3J0IGFzeW5jIGZ1bmN0aW9uIGNyZWF0ZVB1bGxSZXF1ZXN0c0dpdGVlKClcbntcblx0Y29uc29sZS5pbmZvKGDlmJfoqablu7rnq4sgUFJgKTtcblxuXHRsZXQgR0lURUVfQUNDRVNTX1RPS0VOID0gcHJvY2Vzcy5lbnYuR0lURUVfQUNDRVNTX1RPS0VOIHx8ICcnO1xuXHRsZXQgR0lURUVfQ0xJRU5UX0lEID0gcHJvY2Vzcy5lbnYuR0lURUVfQ0xJRU5UX0lEIHx8ICcnO1xuXHRsZXQgR0lURUVfQ0xJRU5UX1NFQ1JFVCA9IHByb2Nlc3MuZW52LkdJVEVFX0NMSUVOVF9TRUNSRVQgfHwgJyc7XG5cdGxldCBHSVRFRV9UT0tFTjEgPSBwcm9jZXNzLmVudi5HSVRFRV9UT0tFTjEgfHwgJyc7XG5cdGxldCBHSVRFRV9UT0tFTjIgPSBwcm9jZXNzLmVudi5HSVRFRV9UT0tFTjIgfHwgJyc7XG5cblx0aWYgKCFHSVRFRV9BQ0NFU1NfVE9LRU4gfHwgIUdJVEVFX0NMSUVOVF9JRCB8fCAhR0lURUVfQ0xJRU5UX1NFQ1JFVClcblx0e1xuXHRcdGxldCBlbnYgPSBkb3RlbnZDb25maWcoeyBwYXRoOiBwYXRoLmpvaW4oUHJvamVjdENvbmZpZy5wcm9qZWN0X3Jvb3QsICcuZW52JykgfSk7XG5cblx0XHRpZiAoZW52LnBhcnNlZClcblx0XHR7XG5cdFx0XHRHSVRFRV9BQ0NFU1NfVE9LRU4gPSBHSVRFRV9BQ0NFU1NfVE9LRU4gfHwgZW52LnBhcnNlZC5HSVRFRV9BQ0NFU1NfVE9LRU47XG5cdFx0XHRHSVRFRV9DTElFTlRfSUQgPSBHSVRFRV9DTElFTlRfSUQgfHwgZW52LnBhcnNlZC5HSVRFRV9DTElFTlRfSUQ7XG5cdFx0XHRHSVRFRV9DTElFTlRfU0VDUkVUID0gR0lURUVfQ0xJRU5UX1NFQ1JFVCB8fCBlbnYucGFyc2VkLkdJVEVFX0NMSUVOVF9TRUNSRVQ7XG5cblx0XHRcdEdJVEVFX1RPS0VOMSA9IEdJVEVFX1RPS0VOMSB8fCBlbnYucGFyc2VkLkdJVEVFX1RPS0VOMTtcblx0XHRcdEdJVEVFX1RPS0VOMiA9IEdJVEVFX1RPS0VOMiB8fCBlbnYucGFyc2VkLkdJVEVFX1RPS0VOMjtcblx0XHR9XG5cdH1cblxuXHRsZXQgdG9rZW4gPSBhd2FpdCBnZXRUb2tlbih7XG5cblx0XHQvL2FjY2Vzc190b2tlbjogR0lURUVfQUNDRVNTX1RPS0VOLFxuXG5cdFx0dXNlcm5hbWU6IEdJVEVFX1RPS0VOMSxcblx0XHRwYXNzd29yZDogR0lURUVfVE9LRU4yLFxuXG5cdFx0Y2xpZW50SWQ6IEdJVEVFX0NMSUVOVF9JRCxcblx0XHRjbGllbnRTZWNyZXQ6IEdJVEVFX0NMSUVOVF9TRUNSRVQsXG5cblx0XHRzY29wZXM6ICdwdWxsX3JlcXVlc3RzJyxcblxuXHR9KS5jYXRjaChmdW5jdGlvbiAoZXJyKVxuXHR7XG5cdFx0Y29uc29sZS5lcnJvcihlcnIpO1xuXHR9KTtcblxuXHRpZiAoIXRva2VuKVxuXHR7XG5cdFx0Y29uc29sZS5lcnJvcihg54Sh5rOV5Y+W5b6XIHRva2VuYCk7XG5cblx0XHRyZXR1cm47XG5cdH1cblx0ZWxzZVxuXHR7XG5cdFx0Y29uc29sZS5pbmZvKGDlt7Llj5blvpcgdG9rZW5gKTtcblx0fVxuXG5cdGxldCBycSA9IG5ldyBDbGllbnRSZXF1ZXN0KHRva2VuLCB7XG5cdFx0YXBpUm9vdDogJ2h0dHBzOi8vZ2l0ZWUuY29tL2FwaS8nXG5cdH0pO1xuXG5cdGxldCBicl9uYW1lID0gY3VycmVudEJyYW5jaE5hbWUobm92ZWxfcm9vdCk7XG5cblx0aWYgKCFicl9uYW1lLm1hdGNoKC9eYXV0b1xcLy8pKVxuXHR7XG5cdFx0Y29uc29sZS5lcnJvcihg55uu5YmN5YiG5pSv54K6ICR7YnJfbmFtZX0g5b+955Wl5bu656uLIFBSYCk7XG5cblx0XHRyZXR1cm47XG5cdH1cblx0ZWxzZVxuXHR7XG5cdFx0Y29uc29sZS5pbmZvKGDnm67liY3liIbmlK/ngrogJHticl9uYW1lfWApO1xuXHR9XG5cblx0YXdhaXQgcnFcblx0XHQuZmV0Y2hTaWduKCcvdjUvcmVwb3MvYmx1ZWxvdmVycy9ub3ZlbC9wdWxscycsIHtcblx0XHRcdG1ldGhvZDogJ1BPU1QnLFxuXHRcdFx0Ym9keToge1xuXHRcdFx0XHR0aXRsZTogYnJfbmFtZSxcblx0XHRcdFx0aGVhZDogYGRlbW9naXRlZToke2JyX25hbWV9YCxcblx0XHRcdFx0YmFzZTogJ21hc3RlcicsXG5cdFx0XHRcdGJvZHk6ICdhdXRvIHByJyxcblx0XHRcdH0sXG5cdFx0fSlcblx0XHQudGFwKGZ1bmN0aW9uIChyZXQ6IHtcblx0XHRcdG51bWJlcjogbnVtYmVyLFxuXHRcdFx0dGl0bGU6IHN0cmluZyxcblx0XHR9KVxuXHRcdHtcblx0XHRcdGNvbnNvbGUuc3VjY2Vzcyhg5oiQ5Yqf5bu656uLIFBSICMke3JldC5udW1iZXJ9ICR7cmV0LnRpdGxlfWApO1xuXHRcdFx0Ly9jb25zb2xlLmRpcihyZXQpO1xuXHRcdH0pXG5cdFx0LmNhdGNoKGZ1bmN0aW9uIChlcnIpXG5cdFx0e1xuXHRcdFx0Y29uc29sZS5lcnJvcihlcnIudG9TdHJpbmcoKSk7XG5cdFx0XHRjb25zb2xlLmVycm9yKGVyci5jb2RlLCBlcnIuc3RhdHVzLCBlcnIuYm9keSk7XG5cdFx0fSlcblx0O1xufVxuXG5leHBvcnQgZGVmYXVsdCBjcmVhdGVQdWxsUmVxdWVzdHNHaXRlZTtcbiJdfQ==